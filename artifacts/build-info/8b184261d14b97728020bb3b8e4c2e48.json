{
	"id": "8b184261d14b97728020bb3b8e4c2e48",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"secureContract(using reentrancy guard).sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.4.24;\r\n\r\nimport \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\";\r\n \r\ncontract VulnerableContract is ReentrancyGuard {\r\n    mapping(address => uint) public balance;\r\n \r\n    function deposit() public payable {\r\n        balance[msg.sender] += msg.value;\r\n    }\r\n \r\n  function withdraw() nonReentrant public {\r\n    uint bal = balance[msg.sender];\r\n    require(bal > 0);\r\n    (bool sent, ) = msg.sender.call.value(bal)(\"\");\r\n    require(sent, \"Failed to send Ether\");\r\n    balance[msg.sender] = 0;\r\n}\r\n\r\n\r\n\r\n    function getBalance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n\r\ncontract Attack {\r\n    VulnerableContract public exploit;\r\n\r\n    constructor(address _exploitAddress) public {\r\n        exploit = VulnerableContract(_exploitAddress);\r\n    }\r\n\r\n    function() external payable {\r\n        if (address(exploit).balance >= 1 ether) {\r\n            exploit.withdraw();\r\n        }\r\n    }\r\n\r\n    function attack() external payable {\r\n        require(msg.value >= 1 ether);\r\n        exploit.deposit.value(1 ether)();\r\n        exploit.withdraw();\r\n    }\r\n\r\n    function getBalance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n"
			},
			"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.4.24;\n\n/**\n * @title Helps contracts guard against reentrancy attacks.\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n * @dev If you mark a function `nonReentrant`, you should also\n * mark it `external`.\n */\ncontract ReentrancyGuard {\n\n  /// @dev counter to allow mutex lock with only one SSTORE operation\n  uint256 private _guardCounter;\n\n  constructor() internal {\n    // The counter starts at one to prevent changing it from zero to a non-zero\n    // value, which is a more expensive operation.\n    _guardCounter = 1;\n  }\n\n  /**\n   * @dev Prevents a contract from calling itself, directly or indirectly.\n   * Calling a `nonReentrant` function from another `nonReentrant`\n   * function is not supported. It is possible to prevent this from happening\n   * by making the `nonReentrant` function external, and make it call a\n   * `private` function that does the actual work.\n   */\n  modifier nonReentrant() {\n    _guardCounter += 1;\n    uint256 localCounter = _guardCounter;\n    _;\n    require(localCounter == _guardCounter);\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"author": "Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",
						"methods": {},
						"title": "Helps contracts guard against reentrancy attacks."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"secureContract(using reentrancy guard).sol": {
				"Attack": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "exploit",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_exploitAddress",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"secureContract(using reentrancy guard).sol\":714:1296  contract Attack {\r... */\n  mstore(0x40, 0x80)\n    /* \"secureContract(using reentrancy guard).sol\":779:887  constructor(address _exploitAddress) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"secureContract(using reentrancy guard).sol\":779:887  constructor(address _exploitAddress) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"secureContract(using reentrancy guard).sol\":863:878  _exploitAddress */\n  dup1\n    /* \"secureContract(using reentrancy guard).sol\":834:841  exploit */\n  0x0\n  dup1\n    /* \"secureContract(using reentrancy guard).sol\":834:879  exploit = VulnerableContract(_exploitAddress) */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"secureContract(using reentrancy guard).sol\":779:887  constructor(address _exploitAddress) public {\r... */\n  pop\n    /* \"secureContract(using reentrancy guard).sol\":714:1296  contract Attack {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"secureContract(using reentrancy guard).sol\":714:1296  contract Attack {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x63d9b770\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"secureContract(using reentrancy guard).sol\":966:973  1 ether */\n      0xde0b6b3a7640000\n        /* \"secureContract(using reentrancy guard).sol\":946:953  exploit */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"secureContract(using reentrancy guard).sol\":938:962  address(exploit).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"secureContract(using reentrancy guard).sol\":938:973  address(exploit).balance >= 1 ether */\n      lt\n      iszero\n        /* \"secureContract(using reentrancy guard).sol\":934:1020  if (address(exploit).balance >= 1 ether) {\r... */\n      iszero\n      tag_7\n      jumpi\n        /* \"secureContract(using reentrancy guard).sol\":990:997  exploit */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"secureContract(using reentrancy guard).sol\":990:1006  exploit.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3ccfd60b\n        /* \"secureContract(using reentrancy guard).sol\":990:1008  exploit.withdraw() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"secureContract(using reentrancy guard).sol\":990:1008  exploit.withdraw() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"secureContract(using reentrancy guard).sol\":990:1008  exploit.withdraw() */\n      pop\n      pop\n      pop\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":934:1020  if (address(exploit).balance >= 1 ether) {\r... */\n    tag_7:\n        /* \"secureContract(using reentrancy guard).sol\":714:1296  contract Attack {\r... */\n      stop\n        /* \"secureContract(using reentrancy guard).sol\":1198:1293  function getBalance() public view returns(uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"secureContract(using reentrancy guard).sol\":1198:1293  function getBalance() public view returns(uint) {\r... */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"secureContract(using reentrancy guard).sol\":737:770  VulnerableContract public exploit */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"secureContract(using reentrancy guard).sol\":737:770  VulnerableContract public exploit */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"secureContract(using reentrancy guard).sol\":1035:1190  function attack() external payable {\r... */\n    tag_4:\n      tag_16\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"secureContract(using reentrancy guard).sol\":1198:1293  function getBalance() public view returns(uint) {\r... */\n    tag_12:\n        /* \"secureContract(using reentrancy guard).sol\":1240:1244  uint */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":1272:1276  this */\n      address\n        /* \"secureContract(using reentrancy guard).sol\":1264:1285  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"secureContract(using reentrancy guard).sol\":1257:1285  return address(this).balance */\n      swap1\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":1198:1293  function getBalance() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"secureContract(using reentrancy guard).sol\":737:770  VulnerableContract public exploit */\n    tag_15:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"secureContract(using reentrancy guard).sol\":1035:1190  function attack() external payable {\r... */\n    tag_17:\n        /* \"secureContract(using reentrancy guard).sol\":1102:1109  1 ether */\n      0xde0b6b3a7640000\n        /* \"secureContract(using reentrancy guard).sol\":1089:1098  msg.value */\n      callvalue\n        /* \"secureContract(using reentrancy guard).sol\":1089:1109  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"secureContract(using reentrancy guard).sol\":1081:1110  require(msg.value >= 1 ether) */\n      iszero\n      iszero\n      tag_20\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_20:\n        /* \"secureContract(using reentrancy guard).sol\":1121:1128  exploit */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"secureContract(using reentrancy guard).sol\":1121:1136  exploit.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"secureContract(using reentrancy guard).sol\":1143:1150  1 ether */\n      0xde0b6b3a7640000\n        /* \"secureContract(using reentrancy guard).sol\":1121:1153  exploit.deposit.value(1 ether)() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"secureContract(using reentrancy guard).sol\":1121:1153  exploit.deposit.value(1 ether)() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"secureContract(using reentrancy guard).sol\":1121:1153  exploit.deposit.value(1 ether)() */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":1164:1171  exploit */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"secureContract(using reentrancy guard).sol\":1164:1180  exploit.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3ccfd60b\n        /* \"secureContract(using reentrancy guard).sol\":1164:1182  exploit.withdraw() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"secureContract(using reentrancy guard).sol\":1164:1182  exploit.withdraw() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"secureContract(using reentrancy guard).sol\":1164:1182  exploit.withdraw() */\n      pop\n      pop\n      pop\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":1035:1190  function attack() external payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582064914a6e9f2a7512e140c7bc49fafcc4e71e21812dbdd9441e50c882d09724900029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061041b83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610398806100836000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01461014057806363d9b7701461016b5780639e5faafc146101c2575b670de0b6b3a76400006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163110151561013e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561012557600080fd5b505af1158015610139573d6000803e3d6000fd5b505050505b005b34801561014c57600080fd5b506101556101cc565b6040518082815260200191505060405180910390f35b34801561017757600080fd5b506101806101eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ca610210565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000341015151561022757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303818588803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b50505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050505600a165627a7a7230582064914a6e9f2a7512e140c7bc49fafcc4e71e21812dbdd9441e50c882d09724900029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x41B DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x398 DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x139 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH5 0x914A6E9F2A PUSH22 0x12E140C7BC49FAFCC4E71E21812DBDD9441E50C882D0 SWAP8 0x24 SWAP1 STOP 0x29 ",
							"sourceMap": "714:582:1:-;;;779:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;779:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:15;834:7;;:45;;;;;;;;;;;;;;;;;;779:108;714:582;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01461014057806363d9b7701461016b5780639e5faafc146101c2575b670de0b6b3a76400006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163110151561013e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561012557600080fd5b505af1158015610139573d6000803e3d6000fd5b505050505b005b34801561014c57600080fd5b506101556101cc565b6040518082815260200191505060405180910390f35b34801561017757600080fd5b506101806101eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ca610210565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000341015151561022757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303818588803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b50505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050505600a165627a7a7230582064914a6e9f2a7512e140c7bc49fafcc4e71e21812dbdd9441e50c882d09724900029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x139 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH5 0x914A6E9F2A PUSH22 0x12E140C7BC49FAFCC4E71E21812DBDD9441E50C882D0 SWAP8 0x24 SWAP1 STOP 0x29 ",
							"sourceMap": "714:582:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:7;946;;;;;;;;;;;938:24;;;:35;;934:86;;;990:7;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:18:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;990:18:1;;;;934:86;714:582;1198:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1198:95:1;;;;;;;;;;;;;;;;;;;;;;;737:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;737:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:155;;;;;;1198:95;1240:4;1272;1264:21;;;1257:28;;1198:95;:::o;737:33::-;;;;;;;;;;;;;:::o;1035:155::-;1102:7;1089:9;:20;;1081:29;;;;;;;;1121:7;;;;;;;;;;;:15;;;1143:7;1121:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1121:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1121:32:1;;;;;1164:7;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1164:18:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1164:18:1;;;;1035:155::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184000",
								"executionCost": "20579",
								"totalCost": "204579"
							},
							"external": {
								"": "infinite",
								"attack()": "infinite",
								"exploit()": "464",
								"getBalance()": "607"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "MSTORE"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "POP"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "MLOAD"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "PUSHSIZE"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP4"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "CODECOPY"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP2"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "ADD"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "MSTORE"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP2"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "ADD"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "DUP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "MLOAD"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "ADD"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP3"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP2"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "SWAP1"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "POP"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "POP"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 878,
									"name": "DUP1"
								},
								{
									"begin": 834,
									"end": 841,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 834,
									"end": 841,
									"name": "DUP1"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "EXP"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "DUP2"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "SLOAD"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "DUP2"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "MUL"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "NOT"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "AND"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "DUP4"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "AND"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "MUL"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "OR"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "SSTORE"
								},
								{
									"begin": 834,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 779,
									"end": 887,
									"name": "POP"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "DUP1"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "CODECOPY"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 714,
									"end": 1296,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582064914a6e9f2a7512e140c7bc49fafcc4e71e21812dbdd9441e50c882d09724900029",
									".code": [
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "LT"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "DIV"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "AND"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "EQ"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "63D9B770"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "EQ"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH",
											"value": "9E5FAAFC"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "EQ"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "DUP1"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "SLOAD"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "EXP"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "DIV"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 962,
											"name": "BALANCE"
										},
										{
											"begin": 938,
											"end": 973,
											"name": "LT"
										},
										{
											"begin": 938,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 1020,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 1020,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 934,
											"end": 1020,
											"name": "JUMPI"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "DUP1"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "SLOAD"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "EXP"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "DIV"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 997,
											"name": "AND"
										},
										{
											"begin": 990,
											"end": 1006,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1006,
											"name": "AND"
										},
										{
											"begin": 990,
											"end": 1006,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "MLOAD"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "AND"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "MUL"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "MSTORE"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "MLOAD"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP4"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "SUB"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP8"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "GAS"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "CALL"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1020,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 934,
											"end": 1020,
											"name": "JUMPDEST"
										},
										{
											"begin": 714,
											"end": 1296,
											"name": "STOP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "JUMP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "RETURN"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMP"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP3"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "AND"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "AND"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SUB"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "RETURN"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "JUMP"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "STOP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "JUMPDEST"
										},
										{
											"begin": 1240,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "ADDRESS"
										},
										{
											"begin": 1264,
											"end": 1285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1285,
											"name": "AND"
										},
										{
											"begin": 1264,
											"end": 1285,
											"name": "BALANCE"
										},
										{
											"begin": 1257,
											"end": 1285,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1285,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SLOAD"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "EXP"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DIV"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "AND"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1089,
											"end": 1098,
											"name": "CALLVALUE"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "LT"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "ISZERO"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "ISZERO"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "ISZERO"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "JUMPI"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "DUP1"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "REVERT"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "JUMPDEST"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "SLOAD"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "EXP"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "DIV"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "AND"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "AND"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "MLOAD"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP3"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "AND"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "MUL"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP2"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "MSTORE"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "ADD"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "MLOAD"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP4"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SUB"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP2"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP6"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP9"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "GAS"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "CALL"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SLOAD"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "EXP"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "DIV"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "MUL"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "SUB"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP8"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "GAS"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "CALL"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1190,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"exploit()": "63d9b770",
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exploit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_exploitAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"secureContract(using reentrancy guard).sol\":\"Attack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x829e14cf022101455870ceb0caf8850848a0504b17ed4bac481610923693bcfe\",\"urls\":[\"bzzr://b614f8024ac2f4c48282fdeeb3fa9afa05f016fa255c327aed669d7746cb74ae\"]},\"secureContract(using reentrancy guard).sol\":{\"keccak256\":\"0x2d5cf2999646efa17cbd6e272bdbb71afd1ef81e48c53255f09e4c29cb890337\",\"urls\":[\"bzzr://03255f35b92c5efd6e50f50a043f44cfa5e7e7013fd2cddff0ae5e81de336c00\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"VulnerableContract": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"secureContract(using reentrancy guard).sol\":174:710  contract VulnerableContract is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":559:560  1 */\n  0x1\n    /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":543:556  _guardCounter */\n  0x0\n    /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":543:560  _guardCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"secureContract(using reentrancy guard).sol\":174:710  contract VulnerableContract is ReentrancyGuard {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"secureContract(using reentrancy guard).sol\":174:710  contract VulnerableContract is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3d670d7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"secureContract(using reentrancy guard).sol\":612:707  function getBalance() public view returns(uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"secureContract(using reentrancy guard).sol\":612:707  function getBalance() public view returns(uint) {\r... */\n      pop\n      tag_7\n      jump(tag_8)\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"secureContract(using reentrancy guard).sol\":369:600  function withdraw() nonReentrant public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"secureContract(using reentrancy guard).sol\":369:600  function withdraw() nonReentrant public {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"secureContract(using reentrancy guard).sol\":277:362  function deposit() public payable {\r... */\n    tag_4:\n      tag_12\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"secureContract(using reentrancy guard).sol\":228:267  mapping(address => uint) public balance */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"secureContract(using reentrancy guard).sol\":228:267  mapping(address => uint) public balance */\n      pop\n      tag_15\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"secureContract(using reentrancy guard).sol\":612:707  function getBalance() public view returns(uint) {\r... */\n    tag_8:\n        /* \"secureContract(using reentrancy guard).sol\":654:658  uint */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":686:690  this */\n      address\n        /* \"secureContract(using reentrancy guard).sol\":678:699  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"secureContract(using reentrancy guard).sol\":671:699  return address(this).balance */\n      swap1\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":612:707  function getBalance() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"secureContract(using reentrancy guard).sol\":369:600  function withdraw() nonReentrant public {\r... */\n    tag_11:\n        /* \"secureContract(using reentrancy guard).sol\":416:424  uint bal */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":477:486  bool sent */\n      dup1\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":978:998  uint256 localCounter */\n      0x0\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":971:972  1 */\n      0x1\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":954:967  _guardCounter */\n      0x0\n      dup1\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":954:972  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":1001:1014  _guardCounter */\n      sload(0x0)\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":978:1014  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":427:434  balance */\n      0x1\n        /* \"secureContract(using reentrancy guard).sol\":427:446  balance[msg.sender] */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":435:445  msg.sender */\n      caller\n        /* \"secureContract(using reentrancy guard).sol\":427:446  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"secureContract(using reentrancy guard).sol\":416:446  uint bal = balance[msg.sender] */\n      swap3\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":467:468  0 */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":461:464  bal */\n      dup4\n        /* \"secureContract(using reentrancy guard).sol\":461:468  bal > 0 */\n      gt\n        /* \"secureContract(using reentrancy guard).sol\":453:469  require(bal > 0) */\n      iszero\n      iszero\n      tag_20\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_20:\n        /* \"secureContract(using reentrancy guard).sol\":492:502  msg.sender */\n      caller\n        /* \"secureContract(using reentrancy guard).sol\":492:507  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"secureContract(using reentrancy guard).sol\":514:517  bal */\n      dup4\n        /* \"secureContract(using reentrancy guard).sol\":492:522  msg.sender.call.value(bal)(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      swap1\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":476:522  (bool sent, ) = msg.sender.call.value(bal)(\"\") */\n      swap2\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":537:541  sent */\n      dup2\n        /* \"secureContract(using reentrancy guard).sol\":529:566  require(sent, \"Failed to send Ether\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4661696c656420746f2073656e64204574686572000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"secureContract(using reentrancy guard).sol\":595:596  0 */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":573:580  balance */\n      0x1\n        /* \"secureContract(using reentrancy guard).sol\":573:592  balance[msg.sender] */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":581:591  msg.sender */\n      caller\n        /* \"secureContract(using reentrancy guard).sol\":573:592  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"secureContract(using reentrancy guard).sol\":573:596  balance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":1051:1064  _guardCounter */\n      sload(0x0)\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":1035:1047  localCounter */\n      dup2\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":1035:1064  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":1027:1065  require(localCounter == _guardCounter) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"secureContract(using reentrancy guard).sol\":369:600  function withdraw() nonReentrant public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"secureContract(using reentrancy guard).sol\":277:362  function deposit() public payable {\r... */\n    tag_13:\n        /* \"secureContract(using reentrancy guard).sol\":345:354  msg.value */\n      callvalue\n        /* \"secureContract(using reentrancy guard).sol\":322:329  balance */\n      0x1\n        /* \"secureContract(using reentrancy guard).sol\":322:341  balance[msg.sender] */\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":330:340  msg.sender */\n      caller\n        /* \"secureContract(using reentrancy guard).sol\":322:341  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"secureContract(using reentrancy guard).sol\":322:354  balance[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"secureContract(using reentrancy guard).sol\":277:362  function deposit() public payable {\r... */\n      jump\t// out\n        /* \"secureContract(using reentrancy guard).sol\":228:267  mapping(address => uint) public balance */\n    tag_16:\n      mstore(0x20, 0x1)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582025528f9d2c01c94adc2fac89ec3624d7399dec09d40371794f7906afd76776c40029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600160008190555061032a8061001b6000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100675780633ccfd60b14610092578063d0e30db0146100a9578063e3d670d7146100b3575b600080fd5b34801561007357600080fd5b5061007c61010a565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a7610129565b005b6100b1610297565b005b3480156100bf57600080fd5b506100f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b6040518082815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000806000600160008082825401925050819055506000549050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925060008311151561019457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168360405180602001905060006040518083038185875af192505050915081151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e6420457468657200000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000548114151561029257600080fd5b505050565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b600160205280600052604060002060009150905054815600a165627a7a7230582025528f9d2c01c94adc2fac89ec3624d7399dec09d40371794f7906afd76776c40029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x32A DUP1 PUSH2 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD DUP2 EQ ISZERO ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 MSTORE DUP16 SWAP14 0x2c ADD 0xc9 0x4a 0xdc 0x2f 0xac DUP10 0xec CALLDATASIZE 0x24 0xd7 CODECOPY SWAP14 0xec MULMOD 0xd4 SUB PUSH18 0x794F7906AFD76776C4002900000000000000 ",
							"sourceMap": "174:536:1:-;;;559:1:0;543:13;:17;;;;174:536:1;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100675780633ccfd60b14610092578063d0e30db0146100a9578063e3d670d7146100b3575b600080fd5b34801561007357600080fd5b5061007c61010a565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a7610129565b005b6100b1610297565b005b3480156100bf57600080fd5b506100f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b6040518082815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000806000600160008082825401925050819055506000549050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925060008311151561019457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168360405180602001905060006040518083038185875af192505050915081151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e6420457468657200000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000548114151561029257600080fd5b505050565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b600160205280600052604060002060009150905054815600a165627a7a7230582025528f9d2c01c94adc2fac89ec3624d7399dec09d40371794f7906afd76776c40029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD DUP2 EQ ISZERO ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 MSTORE DUP16 SWAP14 0x2c ADD 0xc9 0x4a 0xdc 0x2f 0xac DUP10 0xec CALLDATASIZE 0x24 0xd7 CODECOPY SWAP14 0xec MULMOD 0xd4 SUB PUSH18 0x794F7906AFD76776C4002900000000000000 ",
							"sourceMap": "174:536:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:95:1;;;;;;;;;;;;;;;;;;;;;;;369:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:231:1;;;;;;277:85;;;;;;228:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:95;654:4;686;678:21;;;671:28;;612:95;:::o;369:231::-;416:8;477:9;978:20:0;971:1;954:13;;:18;;;;;;;;;;;1001:13;;978:36;;427:7:1;:19;435:10;427:19;;;;;;;;;;;;;;;;416:30;;467:1;461:3;:7;453:16;;;;;;;;492:10;:15;;514:3;492:30;;;;;;;;;;;;;;;;;;;;;;476:46;;537:4;529:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:1;573:7;:19;581:10;573:19;;;;;;;;;;;;;;;:23;;;;1051:13:0;;1035:12;:29;1027:38;;;;;;;;369:231:1;;;:::o;277:85::-;345:9;322:7;:19;330:10;322:19;;;;;;;;;;;;;;;;:32;;;;;;;;;;;277:85::o;228:39::-;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "162000",
								"executionCost": "20198",
								"totalCost": "182198"
							},
							"external": {
								"balance(address)": "598",
								"deposit()": "20474",
								"getBalance()": "607",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "MSTORE"
								},
								{
									"begin": 559,
									"end": 560,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 543,
									"end": 556,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 543,
									"end": 560,
									"name": "DUP2"
								},
								{
									"begin": 543,
									"end": 560,
									"name": "SWAP1"
								},
								{
									"begin": 543,
									"end": 560,
									"name": "SSTORE"
								},
								{
									"begin": 543,
									"end": 560,
									"name": "POP"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "DUP1"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "CODECOPY"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 174,
									"end": 710,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582025528f9d2c01c94adc2fac89ec3624d7399dec09d40371794f7906afd76776c40029",
									".code": [
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "MSTORE"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "LT"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPI"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "SWAP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DIV"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "AND"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "EQ"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPI"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "EQ"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPI"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "EQ"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPI"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "E3D670D7"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "EQ"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPI"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 710,
											"name": "REVERT"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMP"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP3"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "MSTORE"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "ADD"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "SWAP2"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "SWAP2"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "SUB"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "RETURN"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "JUMP"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "STOP"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "JUMP"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "STOP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "AND"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP3"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "JUMP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "RETURN"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 686,
											"end": 690,
											"name": "ADDRESS"
										},
										{
											"begin": 678,
											"end": 699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 699,
											"name": "AND"
										},
										{
											"begin": 678,
											"end": 699,
											"name": "BALANCE"
										},
										{
											"begin": 671,
											"end": 699,
											"name": "SWAP1"
										},
										{
											"begin": 671,
											"end": 699,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 954,
											"end": 967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 967,
											"name": "DUP1"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "DUP3"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "DUP3"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "SLOAD"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "SWAP3"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "SSTORE"
										},
										{
											"begin": 954,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "SLOAD"
										},
										{
											"begin": 978,
											"end": 1014,
											"name": "SWAP1"
										},
										{
											"begin": 978,
											"end": 1014,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 434,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 445,
											"name": "CALLER"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "KECCAK256"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD"
										},
										{
											"begin": 416,
											"end": 446,
											"name": "SWAP3"
										},
										{
											"begin": 416,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 461,
											"end": 464,
											"name": "DUP4"
										},
										{
											"begin": 461,
											"end": 468,
											"name": "GT"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "ISZERO"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "ISZERO"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "JUMPI"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "REVERT"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 453,
											"end": 469,
											"name": "JUMPDEST"
										},
										{
											"begin": 492,
											"end": 502,
											"name": "CALLER"
										},
										{
											"begin": 492,
											"end": 507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 492,
											"end": 507,
											"name": "AND"
										},
										{
											"begin": 514,
											"end": 517,
											"name": "DUP4"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "ADD"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP4"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "SUB"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP2"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP6"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "DUP8"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "GAS"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "CALL"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "SWAP3"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 492,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 476,
											"end": 522,
											"name": "SWAP2"
										},
										{
											"begin": 476,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ISZERO"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ISZERO"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "JUMPI"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP3"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "SUB"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP3"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "4661696C656420746F2073656E64204574686572000000000000000000000000"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "SUB"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "REVERT"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 529,
											"end": 566,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 592,
											"name": "KECCAK256"
										},
										{
											"begin": 573,
											"end": 596,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 596,
											"name": "SSTORE"
										},
										{
											"begin": 573,
											"end": 596,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "SLOAD"
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1064,
											"name": "EQ"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "ISZERO"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "ISZERO"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "JUMPI"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "REVERT"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1065,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 600,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 345,
											"end": 354,
											"name": "CALLVALUE"
										},
										{
											"begin": 322,
											"end": 329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 330,
											"end": 340,
											"name": "CALLER"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "KECCAK256"
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "SLOAD"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "ADD"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "SWAP3"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "SSTORE"
										},
										{
											"begin": 322,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "KECCAK256"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "SLOAD"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 228,
											"end": 267,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance(address)": "e3d670d7",
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"secureContract(using reentrancy guard).sol\":\"VulnerableContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x829e14cf022101455870ceb0caf8850848a0504b17ed4bac481610923693bcfe\",\"urls\":[\"bzzr://b614f8024ac2f4c48282fdeeb3fa9afa05f016fa255c327aed669d7746cb74ae\"]},\"secureContract(using reentrancy guard).sol\":{\"keccak256\":\"0x2d5cf2999646efa17cbd6e272bdbb71afd1ef81e48c53255f09e4c29cb890337\",\"urls\":[\"bzzr://03255f35b92c5efd6e50f50a043f44cfa5e7e7013fd2cddff0ae5e81de336c00\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "secureContract(using reentrancy guard).sol:17:5: Warning: Different number of components on the left hand side (2) than on the right hand side (1).\n    (bool sent, ) = msg.sender.call.value(bal)(\"\");\r\n    ^--------------------------------------------^\n",
				"message": "Different number of components on the left hand side (2) than on the right hand side (1).",
				"severity": "warning",
				"sourceLocation": {
					"end": 522,
					"file": "secureContract(using reentrancy guard).sol",
					"start": 476
				},
				"type": "Warning"
			}
		],
		"sources": {
			"https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							30
						]
					},
					"id": 31,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Helps contracts guard against reentrancy attacks.\n@author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n@dev If you mark a function `nonReentrant`, you should also\nmark it `external`.",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 30,
									"src": "349:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "349:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "406:159:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 6,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "543:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "559:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "543:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "543:17:0"
											}
										]
									},
									"documentation": null,
									"id": 11,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:0:0"
									},
									"scope": 30,
									"src": "383:182:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "948:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "954:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "971:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "954:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "954:18:0"
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "978:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 20,
												"initialValue": {
													"argumentTypes": null,
													"id": 19,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "1001:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "978:36:0"
											},
											{
												"id": 21,
												"nodeType": "PlaceholderStatement",
												"src": "1020:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 23,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1035:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 24,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1051:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1035:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															192
														],
														"referencedDeclaration": 191,
														"src": "1027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1027:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1027:38:0"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 29,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:2:0"
									},
									"src": "924:146:0",
									"visibility": "internal"
								}
							],
							"scope": 31,
							"src": "249:824:0"
						}
					],
					"src": "0:1074:0"
				},
				"id": 0
			},
			"secureContract(using reentrancy guard).sol": {
				"ast": {
					"absolutePath": "secureContract(using reentrancy guard).sol",
					"exportedSymbols": {
						"Attack": [
							173
						],
						"VulnerableContract": [
							105
						]
					},
					"id": 174,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:1"
						},
						{
							"absolutePath": "https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol",
							"file": "https://github.com/binodnp/openzeppelin-solidity/blob/master/contracts/utils/ReentrancyGuard.sol",
							"id": 33,
							"nodeType": "ImportDirective",
							"scope": 174,
							"sourceUnit": 31,
							"src": "63:106:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 34,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 30,
										"src": "205:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$30",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "205:15:1"
								}
							],
							"contractDependencies": [
								30
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 105,
							"linearizedBaseContracts": [
								105,
								30
							],
							"name": "VulnerableContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 39,
									"name": "balance",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "228:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 38,
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "236:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "228:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 37,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "247:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "311:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 42,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "322:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 45,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "330:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "330:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "322:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "345:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "345:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "322:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "322:32:1"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:1"
									},
									"payable": true,
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:0:1"
									},
									"scope": 105,
									"src": "277:85:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "409:191:1",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "416:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 56,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "416:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 58,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "427:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 61,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 59,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "435:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "427:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "416:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "461:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "461:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															192
														],
														"referencedDeclaration": 191,
														"src": "453:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "453:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "453:16:1"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"name": "sent",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "477:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 69,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "477:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 79,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "519:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 75,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "514:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 71,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "492:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "492:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "492:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "492:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "492:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "476:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 81,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "537:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "543:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															192
														],
														"referencedDeclaration": 192,
														"src": "529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "529:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 85,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "573:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 88,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 86,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "581:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "581:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "573:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "595:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "573:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "573:23:1"
											}
										]
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 54,
											"modifierName": {
												"argumentTypes": null,
												"id": 53,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 29,
												"src": "389:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "389:12:1"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:0:1"
									},
									"scope": 105,
									"src": "369:231:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "660:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 99,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "686:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_VulnerableContract_$105",
																	"typeString": "contract VulnerableContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_VulnerableContract_$105",
																	"typeString": "contract VulnerableContract"
																}
															],
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "678:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "678:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "678:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 102,
												"nodeType": "Return",
												"src": "671:28:1"
											}
										]
									},
									"documentation": null,
									"id": 104,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "654:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "654:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:6:1"
									},
									"scope": 105,
									"src": "612:95:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 174,
							"src": "174:536:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 173,
							"linearizedBaseContracts": [
								173
							],
							"name": "Attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 107,
									"name": "exploit",
									"nodeType": "VariableDeclaration",
									"scope": 173,
									"src": "737:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_VulnerableContract_$105",
										"typeString": "contract VulnerableContract"
									},
									"typeName": {
										"contractScope": null,
										"id": 106,
										"name": "VulnerableContract",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 105,
										"src": "737:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VulnerableContract_$105",
											"typeString": "contract VulnerableContract"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "823:64:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "exploit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "834:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VulnerableContract_$105",
															"typeString": "contract VulnerableContract"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 114,
																"name": "_exploitAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "863:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 113,
															"name": "VulnerableContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "844:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VulnerableContract_$105_$",
																"typeString": "type(contract VulnerableContract)"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "844:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VulnerableContract_$105",
															"typeString": "contract VulnerableContract"
														}
													},
													"src": "834:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_VulnerableContract_$105",
														"typeString": "contract VulnerableContract"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "834:45:1"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"name": "_exploitAddress",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "791:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "790:25:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:0:1"
									},
									"scope": 173,
									"src": "779:108:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "923:104:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 123,
																	"name": "exploit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "946:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VulnerableContract_$105",
																		"typeString": "contract VulnerableContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VulnerableContract_$105",
																		"typeString": "contract VulnerableContract"
																	}
																],
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "938:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "938:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "938:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "966:7:1",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "938:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 134,
												"nodeType": "IfStatement",
												"src": "934:86:1",
												"trueBody": {
													"id": 133,
													"nodeType": "Block",
													"src": "975:45:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 128,
																		"name": "exploit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "990:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VulnerableContract_$105",
																			"typeString": "contract VulnerableContract"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 93,
																	"src": "990:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																		"typeString": "function () external"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "990:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 132,
															"nodeType": "ExpressionStatement",
															"src": "990:18:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:2:1"
									},
									"payable": true,
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:1"
									},
									"scope": 173,
									"src": "895:132:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1070:120:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 140,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "1089:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1089:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1102:7:1",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1089:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															192
														],
														"referencedDeclaration": 191,
														"src": "1081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1081:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1143:7:1",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "exploit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "1121:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VulnerableContract_$105",
																		"typeString": "contract VulnerableContract"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "deposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "1121:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$__$returns$__$",
																	"typeString": "function () payable external"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1121:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
																"typeString": "function (uint256) returns (function () payable external)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1121:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1121:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 155,
															"name": "exploit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_VulnerableContract_$105",
																"typeString": "contract VulnerableContract"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "1164:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1164:18:1"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"payable": true,
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:0:1"
									},
									"scope": 173,
									"src": "1035:155:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1246:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 167,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "1272:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Attack_$173",
																	"typeString": "contract Attack"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Attack_$173",
																	"typeString": "contract Attack"
																}
															],
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1264:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1264:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1264:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 170,
												"nodeType": "Return",
												"src": "1257:28:1"
											}
										]
									},
									"documentation": null,
									"id": 172,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1240:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1240:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1239:6:1"
									},
									"scope": 173,
									"src": "1198:95:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 174,
							"src": "714:582:1"
						}
					],
					"src": "35:1263:1"
				},
				"id": 1
			}
		}
	}
}